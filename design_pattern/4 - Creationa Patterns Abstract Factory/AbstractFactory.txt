public interface ICacheFactory
{
    ICacheService CreateCacheService();
    ILogger CreateLogger(); // Ví dụ, có thể có các phương thức khác liên quan đến hệ thống cache
}



public class InMemoryCacheFactory : ICacheFactory
{
    public ICacheService CreateCacheService()
    {
        return new InMemoryCacheService();
    }

    public ILogger CreateLogger()
    {
        return new ConsoleLogger(); // Ví dụ đơn giản, có thể thay thế bằng logging service khác
    }
}



public class RedisCacheFactory : ICacheFactory
{
    public ICacheService CreateCacheService()
    {
        return new RedisCacheService();
    }

    public ILogger CreateLogger()
    {
        return new FileLogger(); // Ví dụ, có thể thay thế bằng logging service khác
    }
}


public interface ICacheService
{
    void Set(string key, object value);
    T Get<T>(string key);
    bool Contains(string key);
    void Remove(string key);
    void Clear();
}



public class InMemoryCacheService : ICacheService
{
    private readonly Dictionary<string, object> _cache = new Dictionary<string, object>();

    public void Set(string key, object value)
    {
        _cache[key] = value;
    }

    public T Get<T>(string key)
    {
        if (_cache.ContainsKey(key))
        {
            return (T)_cache[key];
        }
        return default(T);
    }

    public bool Contains(string key)
    {
        return _cache.ContainsKey(key);
    }

    public void Remove(string key)
    {
        _cache.Remove(key);
    }

    public void Clear()
    {
        _cache.Clear();
    }
}

public class RedisCacheService : ICacheService
{
    // Implement Redis specific cache methods here
}



public class CacheManager
{
    private readonly ICacheFactory _cacheFactory;

    public CacheManager(ICacheFactory cacheFactory)
    {
        _cacheFactory = cacheFactory;
    }

    public void UseCache()
    {
        ICacheService cacheService = _cacheFactory.CreateCacheService();
        ILogger logger = _cacheFactory.CreateLogger();

        // Sử dụng cacheService và logger tại đây
    }
}


public class Program
{
    public static void Main(string[] args)
    {
        // Sử dụng InMemoryCacheFactory
        ICacheFactory cacheFactory = new InMemoryCacheFactory();
        CacheManager cacheManager = new CacheManager(cacheFactory);
        cacheManager.UseCache();

        // Hoặc sử dụng RedisCacheFactory
        ICacheFactory redisCacheFactory = new RedisCacheFactory();
        CacheManager redisCacheManager = new CacheManager(redisCacheFactory);
        redisCacheManager.UseCache();
    }
}
